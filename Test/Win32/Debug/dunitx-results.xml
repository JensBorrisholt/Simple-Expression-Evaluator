<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<test-results name="C:\Users\Jens Borrisholt\Documents\Repo\Simple Expression Evaluator\Test\Win32\Debug\SimpleExpressionEvaluatorTest.exe" total="40" errors="0" failures="0" ignored="0" inconclusive="0" not-run="0" skipped="0" invalid="0" date="2022-02-14" time="0.324">
  <culture-info current-culture="en" current-uiculture="en" />
  <test-suite type="Assembly" name="SimpleExpressionEvaluatorTest.exe" executed="true" result="Success" success="True" time="0.324" asserts="0">
    <results>
        <test-suite type="Namespace" name="Expressions" executed="true" result="Success" success="True" time="0.324" asserts="0" >
          <results>
              <test-suite type="Fixture" name="Tests" executed="True" result="Success" success="True" time="0.324" >
                <results>
                  <test-case name="SimpleExpressions. &quot;1234&quot; = 1234,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="SimpleExpressions. &quot;1+2*3&quot; = 7,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5*(4+4+1)&quot; = 45,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5*(2*(1+3)+1)&quot; = 45,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5*((1+3)*2+1)&quot; = 45,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;-(2+1)*4&quot; = -12,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;-4*(2+1)&quot; = -12,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5*((1+3)*2+1&quot; = 0,  EvaluationError = Parentheses, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5*((1+3)*2)+1)&quot; = 0,  EvaluationError = Parentheses, ErrorPos = &quot;)&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5(1+3)&quot; = 20,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Parenthesis. &quot;5(1+3)*2+1&quot; = 41,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spaces. &quot;5 * ((1 + 3) * 2 + 1)&quot; = 45,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="Spaces. &quot;5 - 2 * ( 3 )&quot; = -1,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spaces. &quot;5 - 2 * ( ( 4 )  - 1 )&quot; = -1,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="Spaces. &quot;1234&quot; = 1234,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FractionalNumbers. &quot;1.5/5&quot; = 0,3,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FractionalNumbers. &quot;1/5e10&quot; = 2E-11,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FractionalNumbers. &quot;(4-3)/(4*4)&quot; = 0,0625,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FractionalNumbers. &quot;1/2/2&quot; = 0,25,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FractionalNumbers. &quot;0.25 * .5 * 0.5&quot; = 0,0625,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FractionalNumbers. &quot;.25 / 2 * .5&quot; = 0,0625,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="RepeatedOperators. &quot;5*/2&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;/2&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="WrongOperatorPosition. &quot;*2&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;*2&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="WrongOperatorPosition. &quot;2+&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="WrongOperatorPosition. &quot;2*&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="DivisionByZero. &quot;2/0&quot; = 0,  EvaluationError = DivideByZero, ErrorPos = &quot;/0&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="DivisionByZero. &quot;3+1/(5-5)+4&quot; = 0,  EvaluationError = DivideByZero, ErrorPos = &quot;/(5-5)+4&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="DivisionByZero. &quot;2/&quot; = 0,  EvaluationError = DivideByZero, ErrorPos = &quot;/&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="InvalidCharacters. &quot;~5&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;~5&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="InvalidCharacters. &quot;5x&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;x&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="MultipleErrors. &quot;3+1/0+4$&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;$&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="MultipleErrors. &quot;3+1/0+4&quot; = 0,  EvaluationError = DivideByZero, ErrorPos = &quot;/0+4&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="MultipleErrors. &quot;q+1/0)&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;q+1/0)&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="MultipleErrors. &quot;+1/0)&quot; = 0,  EvaluationError = Parentheses, ErrorPos = &quot;)&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="MultipleErrors. &quot;+1/0&quot; = 0,  EvaluationError = DivideByZero, ErrorPos = &quot;/0&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="EmptyString. &quot;&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="EmptyString. &quot;&quot; = 0,  EvaluationError = WrongChar, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="DivTest. &quot;3\2&quot; = 1,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="DivTest. &quot;2+3\2&quot; = 3,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="DivTest. &quot;3*3\3&quot; = 3,  EvaluationError = None, ErrorPos = &quot;&quot;" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
          </results>
        </test-suite>
    </results>
  </test-suite>
</test-results>
